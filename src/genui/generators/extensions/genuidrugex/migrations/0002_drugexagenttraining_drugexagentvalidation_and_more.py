# Generated by Django 4.1 on 2022-08-03 13:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('models', '0006_alter_model_polymorphic_ctype_and_more'),
        ('projects', '0002_alter_project_polymorphic_ctype'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('qsar', '0003_auto_20210112_0858'),
        ('genuidrugex', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DrugExAgentTraining',
            fields=[
                ('trainingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='models.trainingstrategy')),
                ('explorer', models.CharField(choices=[('GE', 'GraphExplorer'), ('SE', 'SMILESExplorer')], default='GE', max_length=2)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('models.trainingstrategy',),
        ),
        migrations.CreateModel(
            name='DrugExAgentValidation',
            fields=[
                ('validationstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='models.validationstrategy')),
                ('validSetSize', models.IntegerField(default=10000, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('models.validationstrategy',),
        ),
        migrations.CreateModel(
            name='DrugExEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rewardScheme', models.CharField(choices=[('PC', 'ParetoCrowding'), ('PS', 'ParetoSimilarity'), ('WS', 'WeightedSum')], default='PC', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='DrugExNetTraining',
            fields=[
                ('trainingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='models.trainingstrategy')),
                ('modelClass', models.CharField(choices=[('GT', 'GraphTransformer'), ('ST', 'SMILESTransformer'), ('SS', 'SMILESSingle')], default='GT', max_length=2)),
                ('inputType', models.CharField(choices=[('FS', 'fragments'), ('MS', 'molecules')], default='FS', max_length=2)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('models.trainingstrategy',),
        ),
        migrations.CreateModel(
            name='DrugExNetValidation',
            fields=[
                ('validationstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='models.validationstrategy')),
                ('validSetSize', models.IntegerField(default=10000, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('models.validationstrategy',),
        ),
        migrations.CreateModel(
            name='DrugExScorer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.FloatField()),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorers', to='genuidrugex.drugexenvironment')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreModifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(verbose_name='last_updated')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScoringMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(verbose_name='last_updated')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='drugexagentvalidationstrategy',
            name='validationstrategy_ptr',
        ),
        migrations.RemoveField(
            model_name='drugexnettrainingstrategy',
            name='trainingstrategy_ptr',
        ),
        migrations.RemoveField(
            model_name='drugexvalidationstrategy',
            name='validationstrategy_ptr',
        ),
        migrations.RemoveField(
            model_name='modelperformancedrugexagent',
            name='modelperformance_ptr',
        ),
        migrations.CreateModel(
            name='ClippedScore',
            fields=[
                ('scoremodifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genuidrugex.scoremodifier')),
                ('upper', models.FloatField()),
                ('lower', models.FloatField(default=0.0)),
                ('high', models.FloatField(default=1.0)),
                ('low', models.FloatField(default=0.0)),
            ],
            options={
                'abstract': False,
            },
            bases=('genuidrugex.scoremodifier',),
        ),
        migrations.CreateModel(
            name='GenUIModelScorer',
            fields=[
                ('scoringmethod_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genuidrugex.scoringmethod')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.qsarmodel')),
            ],
            options={
                'abstract': False,
            },
            bases=('genuidrugex.scoringmethod',),
        ),
        migrations.CreateModel(
            name='PropertyScorer',
            fields=[
                ('scoringmethod_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genuidrugex.scoringmethod')),
                ('prop', models.CharField(choices=[('MW', 'Property_MW'), ('logP', 'Property_logP'), ('HBA', 'Property_HBA'), ('HBD', 'Property_HBD'), ('Rotable', 'Property_Rotable'), ('Amide', 'Property_Amide'), ('Bridge', 'Property_Bridge'), ('Hetero', 'Property_Hetero'), ('Heavy', 'Property_Heavy'), ('Spiro', 'Property_Spiro'), ('FCSP3', 'Property_FCSP3'), ('Ring', 'Property_Ring'), ('Aliphatic', 'Property_Aliphatic'), ('Aromatic', 'Property_Aromatic'), ('Saturated', 'Property_Saturated'), ('HeteroR', 'Property_HeteroR'), ('TPSA', 'Property_TPSA'), ('Valence', 'Property_Valence'), ('MR', 'Property_MR'), ('QED', 'Property_QED'), ('SA', 'Property_SA'), ('Bertz', 'Property_Bertz')], max_length=32)),
            ],
            options={
                'abstract': False,
            },
            bases=('genuidrugex.scoringmethod',),
        ),
        migrations.DeleteModel(
            name='DrugExAgentTrainingStrategy',
        ),
        migrations.DeleteModel(
            name='DrugExAgentValidationStrategy',
        ),
        migrations.DeleteModel(
            name='DrugExNetTrainingStrategy',
        ),
        migrations.DeleteModel(
            name='DrugExValidationStrategy',
        ),
        migrations.DeleteModel(
            name='ModelPerformanceDrugExAgent',
        ),
        migrations.AddField(
            model_name='drugexscorer',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genuidrugex.scoringmethod'),
        ),
        migrations.AddField(
            model_name='drugexscorer',
            name='modifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genuidrugex.scoremodifier'),
        ),
        migrations.AlterField(
            model_name='drugexagent',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drugexEnviron', to='genuidrugex.drugexenvironment'),
        ),
    ]
