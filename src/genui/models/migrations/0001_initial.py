# Generated by Django 5.0.6 on 2024-06-11 12:12

import django.db.models.deletion
import genui.utils.extensions.tasks.models
import genui.utils.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlgorithmMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ValidationStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(verbose_name='last_updated')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
            bases=(genui.utils.extensions.tasks.models.TaskShortcutsMixIn, models.Model),
        ),
        migrations.CreateModel(
            name='ModelBuilder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corePackage', models.CharField(default='genui.models.genuimodels', max_length=1024)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModelFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('main', 'Main'), ('aux', 'Auxiliary')], default='aux', max_length=32)),
                ('note', models.CharField(blank=True, max_length=128)),
                ('file', models.FileField(null=True, storage=genui.utils.models.OverwriteStorage(), upload_to='models/')),
            ],
        ),
        migrations.CreateModel(
            name='ModelFileFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fileExtension', models.CharField(max_length=32, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='ModelParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('contentType', models.CharField(choices=[('string', 'String'), ('bool', 'Logical'), ('integer', 'Integer'), ('float', 'Float')], default='string', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='ModelParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corePackage', models.CharField(default='genui.models.genuimodels', max_length=1024)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainingStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Algorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corePackage', models.CharField(default='genui.models.genuimodels', max_length=1024)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('validModes', models.ManyToManyField(to='models.algorithmmode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BasicValidationStrategy',
            fields=[
                ('validationstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='models.validationstrategy')),
                ('cvFolds', models.IntegerField()),
                ('validSetSize', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=('models.validationstrategy',),
        ),
        migrations.AddField(
            model_name='validationstrategy',
            name='modelInstance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validationStrategies', to='models.model'),
        ),
    ]
